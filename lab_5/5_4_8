#include <iostream>
#include <cmath>
#include <iomanip>
#include <math.h>

using namespace std;



int iter = 0;
double eps = 1e-9;

double func1(double x, double s){
   return pow((x-1.), 3)-8.;
   //return s*x - pow(cos(M_PI*x), 2);
}
double func2(double x, double s){
   // return pow((x-1.), 3)-8.;
   return s*x - pow(cos(M_PI*x), 2);
}

double solve(double (*p_func)(double, double), double s ,double a = 1.,  double b = 3.){

    double X = (a+b)/2;

    while ((fabs((*p_func)(X, s))> eps)&&(fabs(a-b) > eps)){
        X = (a+b)/2;
        if ((*p_func)(a, s)*(*p_func)(X, s) < 0) b = X;
        else a = X;
        iter++;
    }
      //cout<<fabs((*p_func)(X))<<endl;

    return X;

}

int main()
{
    double Xr = solve(func1, 0, 0, 3);
    cout <<setw(20)<<Xr<<setw(20)<<func1(Xr, 0)<<setw(3)<<iter<<endl;
    double s0 = 1, sLast = 3, ds = 1;
    cout <<setw(3)<<"s"<<setw(20)<<"Xr"<<setw(20)<<"func(Xr)"<<setw(3)<<"iter"<<endl;

    for(double s = s0; s <= sLast; s+= ds){

        iter = 0;

        double Xr = solve(func2, s, 0, 3);

        cout <<setw(3)<<s<<setw(20)<<Xr<<setw(20)<<func2(Xr, s)<<setw(3)<<iter<<endl;

    }


    return 0;
}
